@model IEnumerable<ABCRetails.Models.Order>
@{
    ViewData["Title"] = "Orders";
    string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Submitted" => "info",
            "Processing" => "warning",
            "Completed" => "success",
            "Cancelled" => "danger",
            _ => "secondary"
        };
    }
}

<style>
    .orders-container {
        display: grid;
        gap: 1.5rem;
    }

    .order-card {
        background: var(--card-bg);
        border-radius: 20px;
        padding: 1.5rem;
        border: 1px solid var(--border-color);
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

        .order-card::before {
            content: '';
            position: absolute;
            left: 0;
            top: 0;
            bottom: 0;
            width: 5px;
            background: linear-gradient(180deg, var(--primary-color), var(--secondary-color));
            transform: scaleY(0);
            transition: transform 0.3s ease;
        }

        .order-card:hover {
            border-color: var(--primary-color);
            box-shadow: 0 10px 30px rgba(99, 102, 241, 0.2);
        }

            .order-card:hover::before {
                transform: scaleY(1);
            }

    .order-header {
        display: flex;
        justify-content: space-between;
        align-items: start;
        margin-bottom: 1.5rem;
        flex-wrap: wrap;
        gap: 1rem;
    }

    .order-id-section {
        flex: 1;
    }

    .order-id {
        font-family: 'Courier New', monospace;
        background: rgba(99, 102, 241, 0.1);
        padding: 0.5rem 1rem;
        border-radius: 10px;
        font-weight: 600;
        color: var(--primary-color);
        display: inline-block;
        margin-bottom: 0.5rem;
    }

    .order-date {
        color: var(--text-secondary);
        font-size: 0.875rem;
    }

    .status-badge {
        padding: 0.5rem 1.5rem;
        border-radius: 50px;
        font-weight: 600;
        font-size: 0.875rem;
    }

        .status-badge.info {
            background: rgba(59, 130, 246, 0.2);
            color: #60a5fa;
        }

        .status-badge.warning {
            background: rgba(251, 191, 36, 0.2);
            color: #fbbf24;
        }

        .status-badge.success {
            background: rgba(16, 185, 129, 0.2);
            color: #10b981;
        }

        .status-badge.danger {
            background: rgba(239, 68, 68, 0.2);
            color: #ef4444;
        }

    .order-body {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1rem;
        margin-bottom: 1.5rem;
    }

    .order-field {
        background: rgba(99, 102, 241, 0.05);
        padding: 1rem;
        border-radius: 12px;
    }

        .order-field .label {
            color: var(--text-secondary);
            font-size: 0.875rem;
            margin-bottom: 0.5rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .order-field .value {
            color: var(--text-primary);
            font-weight: 600;
            font-size: 1.1rem;
        }

    .order-actions {
        display: flex;
        gap: 0.5rem;
        flex-wrap: wrap;
    }

    .btn-order-action {
        border-radius: 10px;
        padding: 0.5rem 1rem;
        border: none;
        font-weight: 600;
        transition: all 0.3s ease;
        font-size: 0.875rem;
    }

        .btn-order-action.view {
            background: rgba(59, 130, 246, 0.2);
            color: #60a5fa;
        }

            .btn-order-action.view:hover {
                background: #3b82f6;
                color: white;
            }

        .btn-order-action.edit {
            background: rgba(99, 102, 241, 0.2);
            color: var(--primary-color);
        }

            .btn-order-action.edit:hover {
                background: var(--primary-color);
                color: white;
            }

    .dropdown-toggle {
        background: rgba(251, 191, 36, 0.2);
        color: #fbbf24;
    }

        .dropdown-toggle:hover {
            background: #fbbf24;
            color: white;
        }

    .dropdown-menu {
        background: var(--card-bg);
        border: 1px solid var(--border-color);
        border-radius: 12px;
        overflow: hidden;
    }

    .dropdown-item {
        color: var(--text-primary);
        padding: 0.75rem 1.5rem;
        transition: all 0.3s ease;
    }

        .dropdown-item:hover {
            background: rgba(99, 102, 241, 0.2);
            color: var(--primary-color);
        }
</style>

<div class="page-header">
    <h2><i class="fas fa-shopping-cart me-2"></i> Orders</h2>
    <a asp-action="Create" class="btn btn-add btn-primary">
        <i class="fas fa-plus me-2"></i> Add Order
    </a>
</div>

@if (Model.Any())
{
    <div class="orders-container">
        @foreach (var order in Model.OrderByDescending(o => o.OrderDate))
        {
            <div class="order-card">
                <div class="order-header">
                    <div class="order-id-section">
                        <div class="order-id">
                            <i class="fas fa-hashtag me-1"></i>@order.OrderId.Substring(0, 12)...
                        </div>
                        <div class="order-date">
                            <i class="far fa-calendar me-1"></i>@order.OrderDate.ToString("MMMM dd, yyyy")
                        </div>
                    </div>
                    <span class="status-badge @(GetStatusBadgeClass(order.Status))">
                        <i class="fas fa-circle me-1" style="font-size: 0.5rem;"></i>@order.Status
                    </span>
                </div>

                <div class="order-body">
                    <div class="order-field">
                        <div class="label">
                            <i class="fas fa-user"></i> Customer
                        </div>
                        <div class="value">@order.Username</div>
                    </div>

                    <div class="order-field">
                        <div class="label">
                            <i class="fas fa-box"></i> Product
                        </div>
                        <div class="value">@order.ProductName</div>
                    </div>

                    <div class="order-field">
                        <div class="label">
                            <i class="fas fa-sort-numeric-up"></i> Quantity
                        </div>
                        <div class="value">@order.Quantity</div>
                    </div>

                    <div class="order-field">
                        <div class="label">
                            <i class="fas fa-dollar-sign"></i> Total Price
                        </div>
                        <div class="value" style="color: var(--accent-color);">@order.TotalPrice.ToString("C")</div>
                    </div>
                </div>

                <div class="order-actions">
                   
                    <a asp-action="Edit" asp-route-id="@order.RowKey" class="btn btn-order-action edit">
                        <i class="fas fa-edit me-1"></i> Edit
                    </a>
                     <form asp-action="Delete" method="post" class="d-inline">
                        <input type="hidden" name="id" value="@order.RowKey" />
                                            <button type="submit" class="btn btn-outline-danger"
                                                    title="Delete" onclick="return confirm('Are you sure you want to delete this customer?')">
                            <i class="fas fa-trash me-1"></i> Delete
                                            </button>
                                        </form>
                    @if (order.Status != "Completed" && order.Status != "Cancelled")
                    {
                        <div class="btn-group">
                            <button type="button" class="btn btn-order-action dropdown-toggle" data-bs-toggle="dropdown">
                                <i class="fas fa-sync-alt me-1"></i> Update Status
                            </button>
                            <ul class="dropdown-menu">
                                @if (order.Status == "Submitted")
                                {
                                    <li>
                                        <a class="dropdown-item" href="#" onclick="updateOrderStatus('@order.RowKey', 'Processing')">
                                            <i class="fas fa-cog me-2"></i>Processing
                                        </a>
                                    </li>
                                }
                                @if (order.Status == "Processing")
                                {
                                    <li>
                                        <a class="dropdown-item" href="#" onclick="updateOrderStatus('@order.RowKey', 'Completed')">
                                            <i class="fas fa-check me-2"></i>Completed
                                        </a>
                                    </li>
                                }
                                <li>
                                    <a class="dropdown-item" href="#" onclick="updateOrderStatus('@order.RowKey', 'Cancelled')">
                                        <i class="fas fa-times me-2"></i>Cancel
                                    </a>
                                </li>
                            </ul>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
}
else
{
    <div class="alert alert-info text-center">
        <i class="fas fa-info-circle me-2"></i>No orders found.
    </div>
}

@section Scripts {
    <script>
        function updateOrderStatus(id, newStatus) {
            if (confirm("Are you sure you want to update the status to " + newStatus + "?")) {
                $.ajax({
                    url: '@Url.Action("UpdateOrderStatus", "Order")',
                    type: 'POST',
                    data: { id: id, newStatus: newStatus },
                    success: function (result) {
                        location.reload();
                    },
                    error: function (xhr, status, error) {
                        alert("An error occurred: " + error);
                    }
                });
            }
        }
    </script>
}