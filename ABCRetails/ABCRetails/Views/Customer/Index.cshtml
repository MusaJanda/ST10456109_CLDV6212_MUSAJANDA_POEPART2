@model IEnumerable<ABCRetails.Models.Customer>
@{
    ViewData["Title"] = "Customers";
}

<style>
    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
        padding: 2rem;
        background: var(--card-bg);
        border-radius: 20px;
        border: 1px solid var(--border-color);
    }

        .page-header h2 {
            margin: 0;
            font-weight: 700;
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

    .btn-add {
        background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
        border: none;
        border-radius: 12px;
        padding: 0.75rem 1.5rem;
        font-weight: 600;
        transition: all 0.3s ease;
    }

        .btn-add:hover {
            transform: scale(1.05);
            box-shadow: 0 10px 20px rgba(99, 102, 241, 0.4);
        }

    .customer-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        gap: 1.5rem;
    }

    .customer-card {
        background: var(--card-bg);
        border-radius: 20px;
        padding: 1.5rem;
        border: 1px solid var(--border-color);
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

        .customer-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 4px;
            height: 100%;
            background: linear-gradient(180deg, var(--primary-color), var(--secondary-color));
            transform: scaleY(0);
            transition: transform 0.3s ease;
        }

        .customer-card:hover {
            transform: translateX(5px);
            border-color: var(--primary-color);
            box-shadow: 0 10px 30px rgba(99, 102, 241, 0.2);
        }

            .customer-card:hover::before {
                transform: scaleY(1);
            }

    .customer-avatar {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
        font-weight: 700;
        color: white;
        margin-bottom: 1rem;
    }

    .customer-info {
        margin-bottom: 1rem;
    }

        .customer-info .label {
            color: var(--text-secondary);
            font-size: 0.875rem;
            margin-bottom: 0.25rem;
        }

        .customer-info .value {
            color: var(--text-primary);
            font-weight: 600;
        }

    .customer-id {
        font-family: 'Courier New', monospace;
        background: rgba(99, 102, 241, 0.1);
        padding: 0.25rem 0.5rem;
        border-radius: 6px;
        font-size: 0.875rem;
    }

    .action-buttons {
        display: flex;
        gap: 0.5rem;
        margin-top: 1rem;
    }

    .btn-action {
        flex: 1;
        border-radius: 10px;
        padding: 0.5rem;
        border: none;
        font-weight: 600;
        transition: all 0.3s ease;
    }

        .btn-action.edit {
            background: rgba(99, 102, 241, 0.2);
            color: var(--primary-color);
        }

            .btn-action.edit:hover {
                background: var(--primary-color);
                color: white;
            }

        .btn-action.delete {
            background: rgba(239, 68, 68, 0.2);
            color: #ef4444;
        }

            .btn-action.delete:hover {
                background: #ef4444;
                color: white;
            }

    .upload-section {
        background: var(--card-bg);
        border-radius: 15px;
        padding: 1.5rem;
        border: 1px solid var(--border-color);
        margin-bottom: 2rem;
    }

    .upload-form {
        display: flex;
        gap: 1rem;
        align-items: end;
    }

    .form-group {
        flex: 1;
    }

    .btn-upload {
        background: linear-gradient(135deg, #10b981, #059669);
        border: none;
        border-radius: 10px;
        padding: 0.75rem 1.5rem;
        font-weight: 600;
        transition: all 0.3s ease;
    }

        .btn-upload:hover {
            transform: scale(1.05);
            box-shadow: 0 10px 20px rgba(16, 185, 129, 0.4);
        }

    .btn-download {
        background: linear-gradient(135deg, #f59e0b, #d97706);
        border: none;
        border-radius: 10px;
        padding: 0.75rem 1.5rem;
        font-weight: 600;
        transition: all 0.3s ease;
    }

        .btn-download:hover {
            transform: scale(1.05);
            box-shadow: 0 10px 20px rgba(245, 158, 11, 0.4);
        }
</style>

<div class="page-header">
    <h2><i class="fas fa-users me-2"></i> Customers</h2>
    <a asp-action="Create" class="btn btn-add btn-primary">
        <i class="fas fa-plus me-2"></i> Add New Customer
    </a>
</div>

<!-- Upload and Download Section -->
<div class="upload-section">
    <h5 class="mb-3"><i class="fas fa-file-import me-2"></i>Batch Operations</h5>
    <div class="row">
        <div class="col-md-8">
            <form asp-action="Upload" method="post" enctype="multipart/form-data" class="upload-form">
                <div class="form-group">
                    <label for="file" class="form-label">Upload Customers (JSON file)</label>
                    <input type="file" class="form-control" id="file" name="file" accept=".json" required />
                    <div class="form-text">Upload a JSON file containing customer data</div>
                </div>
                <button type="submit" class="btn btn-upload">
                    <i class="fas fa-upload me-2"></i> Upload
                </button>
            </form>
        </div>
        <div class="col-md-4">
            <div class="d-grid">
                <a asp-action="Download" class="btn btn-download">
                    <i class="fas fa-download me-2"></i> Download All Customers
                </a>
            </div>
        </div>
    </div>
</div>

<!-- Success/Error Messages -->
@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-check-circle me-2"></i> @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="fas fa-exclamation-circle me-2"></i> @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["Warning"] != null)
{
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        <i class="fas fa-exclamation-triangle me-2"></i> @TempData["Warning"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<!-- Customers Grid -->
@if (Model.Any())
{
    <div class="customer-grid">
        @foreach (var customer in Model)
        {
            <div class="customer-card">
                <div class="d-flex align-items-start">
                    <div class="customer-avatar">
                        @if (!string.IsNullOrEmpty(customer.Name) && !string.IsNullOrEmpty(customer.Surname))
                        {
                            @customer.Name.Substring(0, 1)
                            @customer.Surname.Substring(0, 1)
                        }
                        else if (!string.IsNullOrEmpty(customer.Name))
                        {
                            @customer.Name.Substring(0, 1)
                        }
                        else if (!string.IsNullOrEmpty(customer.Username))
                        {
                            @customer.Username.Substring(0, 1)
                        }
                        else
                        {
                            <text>C</text>
                        }
                    </div>
                    <div class="flex-grow-1 ms-3">
                        <h5 style="color: var(--text-primary); margin-bottom: 0.5rem;">
                            @customer.Name @customer.Surname
                        </h5>
                        @if (!string.IsNullOrEmpty(customer.CustomerId))
                        {
                            <div class="customer-id">@customer.CustomerId.Substring(0, Math.Min(customer.CustomerId.Length, 12))...</div>
                        }
                    </div>
                </div>

                <div class="customer-info mt-3">
                    <div class="mb-2">
                        <div class="label"><i class="fas fa-user me-1"></i> Username</div>
                        <div class="value">@customer.Username</div>
                    </div>
                    <div class="mb-2">
                        <div class="label"><i class="fas fa-envelope me-1"></i> Email</div>
                        <div class="value">@customer.Email</div>
                    </div>
                    <div>
                        <div class="label"><i class="fas fa-map-marker-alt me-1"></i> Shipping Address</div>
                        <div class="value">@customer.ShippingAddress</div>
                    </div>
                </div>

                <div class="action-buttons">
                    <a asp-action="Edit" asp-route-id="@customer.RowKey" class="btn btn-action edit">
                        <i class="fas fa-edit me-1"></i> Edit
                    </a>
                    <a asp-action="Details" asp-route-id="@customer.RowKey" class="btn btn-action" style="background: rgba(59, 130, 246, 0.2); color: #3b82f6;">
                        <i class="fas fa-eye me-1"></i> View
                    </a>
                    <form asp-action="Delete" method="post" class="d-inline flex-fill">
                        <input type="hidden" name="id" value="@customer.RowKey" />
                        <button type="submit" class="btn btn-action delete w-100"
                                onclick="return confirm('Are you sure you want to delete customer @customer.Name @customer.Surname?')">
                            <i class="fas fa-trash me-1"></i> Delete
                        </button>
                    </form>
                </div>
            </div>
        }
    </div>
}
else
{
    <div class="alert alert-info text-center">
        <i class="fas fa-info-circle me-2"></i>No customers found.
        <a asp-action="Create" class="alert-link">Create your first customer</a> or
        <a href="#" class="alert-link" data-bs-toggle="modal" data-bs-target="#uploadModal">upload a JSON file</a>.
    </div>
}

<!-- Upload Modal for empty state -->
<div class="modal fade" id="uploadModal" tabindex="-1" aria-labelledby="uploadModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="uploadModalLabel">Upload Customers</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form asp-action="Upload" method="post" enctype="multipart/form-data">
                    <div class="mb-3">
                        <label for="fileModal" class="form-label">Select JSON File</label>
                        <input type="file" class="form-control" id="fileModal" name="file" accept=".json" required />
                        <div class="form-text">Upload a JSON file containing customer data in the correct format.</div>
                    </div>
                    <div class="d-grid">
                        <button type="submit" class="btn btn-success">
                            <i class="fas fa-upload me-2"></i> Upload Customers
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Auto-dismiss alerts after 5 seconds
        setTimeout(function () {
            $('.alert').alert('close');
        }, 5000);

        // File input validation
        document.addEventListener('DOMContentLoaded', function() {
            const fileInput = document.getElementById('file');
            if (fileInput) {
                fileInput.addEventListener('change', function() {
                    const file = this.files[0];
                    if (file && !file.name.toLowerCase().endsWith('.json')) {
                        alert('Please select a JSON file.');
                        this.value = '';
                    }
                });
            }
        });
    </script>
}